{"ast":null,"code":"import { Component } from \"react\";\nimport { addTask, getTasks, updateTask, deleteTask } from \"./services/taskServices\"; // var moment = require(\"moment\");\n// var formatted_date = moment(photo.date_published).format(\"YYYY-MM-DD\");\n\nclass Tasks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      this.setState({\n        currentTask: input.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const originalTasks = this.state.tasks;\n\n      try {\n        const {\n          data\n        } = await addTask({\n          task: this.state.currentTask\n        });\n        const tasks = originalTasks;\n        tasks.push(data);\n        this.setState({\n          tasks,\n          currentTask: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleUpdate = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = [...originalTasks];\n        const index = tasks.findIndex(task => task._id === currentTask);\n        tasks[index] = { ...tasks[index]\n        };\n        tasks[index].completed = !tasks[index].completed;\n        let date_create = new Date();\n        console.log(date_create);\n        tasks[index].completedAt = date_create;\n        this.setState({\n          tasks\n        });\n        await updateTask(currentTask, {\n          completed: tasks[index].completed,\n          completedAt: tasks[index].completedAt\n        });\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n\n    this.handleDelete = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = originalTasks.filter(task => task._id !== currentTask);\n        this.setState({\n          tasks\n        });\n        await deleteTask(currentTask);\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await getTasks();\n      this.setState({\n        tasks: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/home/cyf/Documents/MyCodes/TODO_V3/TODO/client/src/Tasks.js"],"names":["Component","addTask","getTasks","updateTask","deleteTask","Tasks","state","tasks","currentTask","handleChange","currentTarget","input","setState","value","handleSubmit","e","preventDefault","originalTasks","data","task","push","error","console","log","handleUpdate","index","findIndex","_id","completed","date_create","Date","completedAt","handleDelete","filter","componentDidMount"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport {\n    addTask,\n    getTasks,\n    updateTask,\n    deleteTask,\n} from \"./services/taskServices\";\n\n// var moment = require(\"moment\");\n// var formatted_date = moment(photo.date_published).format(\"YYYY-MM-DD\");\n\nclass Tasks extends Component {\n    state = { tasks: [], currentTask: \"\" };\n\n    async componentDidMount() {\n        try {\n            const { data } = await getTasks();\n            this.setState({ tasks: data });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ currentTask: input.value });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const originalTasks = this.state.tasks;\n        try {\n            const { data } = await addTask({ task: this.state.currentTask });\n            const tasks = originalTasks;\n            tasks.push(data);\n            this.setState({ tasks, currentTask: \"\" });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    handleUpdate = async (currentTask) => {\n        const originalTasks = this.state.tasks;\n        try {\n            const tasks = [...originalTasks];\n            const index = tasks.findIndex((task) => task._id === currentTask);\n            tasks[index] = { ...tasks[index] };\n            tasks[index].completed = !tasks[index].completed;\n            let date_create = new Date()\n            console.log(date_create);\n            tasks[index].completedAt = date_create;\n            this.setState({ tasks });\n            await updateTask(currentTask, {\n              completed: tasks[index].completed,\n              completedAt: tasks[index].completedAt\n            });\n        } catch (error) {\n            this.setState({ tasks: originalTasks });\n            console.log(error);\n        }\n    };\n\n    handleDelete = async (currentTask) => {\n        const originalTasks = this.state.tasks;\n        try {\n            const tasks = originalTasks.filter(\n                (task) => task._id !== currentTask\n            );\n            this.setState({ tasks });\n            await deleteTask(currentTask);\n        } catch (error) {\n            this.setState({ tasks: originalTasks });\n            console.log(error);\n        }\n    };\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}